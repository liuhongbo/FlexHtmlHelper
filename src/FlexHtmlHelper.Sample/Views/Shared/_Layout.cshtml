@using System.Collections.Generic;
@{
    List<KeyValuePair<string, string>> navbar = new List<KeyValuePair<string, string>>();
    navbar.Add(new KeyValuePair<string, string>("Grid", "Row"));
    navbar.Add(new KeyValuePair<string, string>("Text", "Index"));
    navbar.Add(new KeyValuePair<string, string>("Input", "Label"));
    navbar.Add(new KeyValuePair<string, string>("Form", "Default"));
    navbar.Add(new KeyValuePair<string, string>("Link", "Link"));
    navbar.Add(new KeyValuePair<string, string>("Button", "Button"));
    navbar.Add(new KeyValuePair<string, string>("Icon", "Icon"));
    navbar.Add(new KeyValuePair<string, string>("Table", "Table"));
    navbar.Add(new KeyValuePair<string, string>("JavaScript", "Collapse"));
    navbar.Add(new KeyValuePair<string, string>("Tag", "Tag"));
    
    var menu = (List<KeyValuePair<string, string>>)ViewBag.menu;
    ViewBag.Title = @Html.ViewContext.RouteData.Values["controller"].ToString() + " " + @Html.ViewContext.RouteData.Values["action"].ToString();   
    
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - FlexHtmlHelper Sample Site</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("FlexHtmlHelper", "Row", "Grid", null, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    @foreach (var item in navbar)
                    {
                        <li class='@(Html.ViewContext.RouteData.Values["controller"].ToString()==item.Key?"active":null)'>@Html.ActionLink(item.Key, item.Value, item.Key)</li>
                    }                    
                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        <br />
        <div class="row">
            <ul class="nav nav-pills">
                @foreach (var item in menu)
                {
                   <li class='@(Html.ViewContext.RouteData.Values["action"].ToString()==item.Key?"active":null)'>@Html.ActionLink(item.Value, item.Key)</li>
                }
            </ul>
        </div>
        <br />
        @RenderBody()
        <hr />
        <div class="row">
            <div class="col-xs-12">
                <script src="@string.Format("http://gist-it.appspot.com/github/liuhongbo/FlexHtmlHelper/blob/master/src/FlexHtmlHelper.Sample/Views/{0}/{1}.cshtml?footer=0",Html.ViewContext.RouteData.Values["Controller"].ToString(),Html.ViewContext.RouteData.Values["action"].ToString())"></script>
            </div>
        </div>
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - FlexHtmlHelper</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
