@model Person
@using FlexHtmlHelper.Mvc;
@using FlexHtmlHelper.Mvc.Html;
@using FlexHtmlHelper.Render;
@{
    ViewBag.Title = "Modal";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var f = @Html.f();
}

<br />
<div class="row">
    <ul class="nav nav-pills">
        <li>@Html.ActionLink("Collapse", "Collapse")</li>
        <li class="active">@Html.ActionLink("Modal", "Modal")</li>
    </ul>
</div>

<br />

<button class="btn btn-default" data-toggle="modal" data-target="#myModal">
    Edit
</button>

@f.Modal("Edit").id("myModal").Body(@f.Tag(@Html.Partial("_ModalEdit", Model))).Footer(f.Button("Button", "Close").attr("data-dismiss", "modal"))

<button class="btn btn-default" data-toggle="modal" data-target="#myLargeModal">
    Edit (Large)
</button>

@f.Modal("Edit").id("myLargeModal").Body(@f.Tag(@Html.Partial("_ModalEdit", Model))).Footer(f.Button("Button", "Close").attr("data-dismiss", "modal")).modal_lg()

<button class="btn btn-default" data-toggle="modal" data-target="#mySmallModal">
    Edit (Small)
</button>

@f.Modal("Edit").id("mySmallModal").Body(@f.Tag(@Html.Partial("_ModalEdit", Model))).Footer(f.Button("Button", "Close").attr("data-dismiss", "modal")).modal_sm().modal_backdrop("static")